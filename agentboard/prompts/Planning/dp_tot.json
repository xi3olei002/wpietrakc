{
    "examples": ["We keep a list of current processed results [None, None, None, None, None, None], where not processed number is written as None, chosen number as yes, and not chosen number as no. In each step, we look at numbers not processed yet, and try to choose a number that could make the sum largest, and discard all its neighbors. Example 1: input = [0, -4, 3, 6, -2, -3] \nAction: choose 0, discard -4\n Observation: previously  chosen 0, sum is 0, current processed result is [yes, no, None, None, None, None]\nReward: 0\nIs done: False\n Action: choose 6, discard 3, -2\n Observation: previously chosen 0, 6, sum is 6, current processed result is [yes, no, no, yes, no, None]\n Action: discard -3 \n Observation: previously chosen 0, 6, sum is 6, current processed result is [yes, no, no, yes, no, no]. All numbers in input has been processed, the task is finished.\n Reward: 6\nIs done:True\nAnswer:[1, 2, 2, 1, 2, 2] (use 1 to denote yes, 2 to denote not chosen). \n\nExample 2: input = [-1, -1, 1, -1, 12, 0]\nAction: discard -1, -1, choose 1, discard -1 \n Observation: previously chosen 1, sum is 1, current processed result is [no, no, yes, no, None, None]\nReward: 1\n Is done: False\n Action: choose 12, discard 0 \n Observation: previously chosen 1, 12,  sum is 13, current processed result is [no, no, yes, no, yes, no]. All numbers in input has been processed, the task is finished.\n Reward: 13\nIs done:True\nAnswer:[2, 2, 1, 2, 1, 2]"],
    "system_msg": "You are a helpful assistant.",
    "evaluation_prompt": "reward is the sum of all your chosen numbers; yet if two adjacent numbers are chosen, the reward is 0. ",
    "instruction": "Given a sequence of integers, find a subsequence with the highest sum, such that no two numbers in the subsequence are adjacent in the original sequence.\n\nOutput a list with \"1\" for chosen numbers and \"2\" for unchosen ones. If multiple solutions exist, select the lexicographically smallest. "
}