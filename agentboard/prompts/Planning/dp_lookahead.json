{
    "examples": ["We keep a list of current processed results [None, None, None, None, None, None], where not processed number is written as None, chosen number as True, and not chosen number as False. In each step, we look at numbers not processed yet, and try to choose a number that could make the sum largest, and discard all its neighbors. Example 1: input = [0, -4, 3, 6, -2, -3]\nThought: -4 is the smallest number in the neighborhood, therefore we should not choose it and 0 could be chosen.\n Action: [True, False, None, None, None, None]\nObservation: chosen 0\nChange boolean to number, Action: [True, False, False, True, None, None]\nObservation: chosen 0,6\nAction: [True, False, False, True, False, False]\nObservation: chosen 0,6, the task is finished\nReward: 6\nAnswer:[1, 0, 0, 1, 0, 0].\n\nExample 2: input = [-1, -1, 1, -1, 12, 0]\nAction:[False, False, None, None, None, None]\nObservation: no numbers are chosen\nAction: [False, False, True, False, None, None]\nObservation: chosen 1\nAction: [False, False, True, False, True, False]\nObservation: chosen 1, 12, the task is finished.\n Reward: 13\nAnswer:[0, 0, 1, 0, 1, 0] "],
    "system_msg": "You are an expert assistant in solving problems.",
    "evaluation_prompt": "reward is the sum of all your chosen numbers; yet if two adjacent numbers are chosen, the reward is -50 ",
    "instruction": "Given a sequence of integers, find a subsequence with the highest sum, such that no two numbers in the subsequence are adjacent in the original sequence.\n\nOutput a list with \"1\" for chosen numbers and \"0\" for unchosen ones. If multiple solutions exist, select the lexicographically largest. "
}